/*
 * This file is generated by jOOQ.
*/
package org.jooq.examples.skala.h2.tables.records


import java.lang.Integer
import java.lang.String
import java.sql.Timestamp

import javax.annotation.Generated

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record11
import org.jooq.Row11
import org.jooq.examples.skala.h2.tables.TBook
import org.jooq.impl.UpdatableRecordImpl

import scala.Array
import scala.Byte


/**
 * This class is generated by jOOQ.
 */
@Generated(
  value = Array(
    "http://www.jooq.org",
    "jOOQ version:3.10.0"
  ),
  comments = "This class is generated by jOOQ"
)
class TBookRecord extends UpdatableRecordImpl[TBookRecord](TBook.T_BOOK) with Record11[Integer, Integer, Integer, Integer, String, Integer, Integer, String, Array[Byte], Integer, Timestamp] {

  /**
   * Setter for <code>PUBLIC.T_BOOK.ID</code>.
   */
  def setId(value : Integer) : Unit = {
    set(0, value)
  }

  /**
   * Getter for <code>PUBLIC.T_BOOK.ID</code>.
   */
  def getId : Integer = {
    val r = get(0)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  /**
   * Setter for <code>PUBLIC.T_BOOK.AUTHOR_ID</code>.
   */
  def setAuthorId(value : Integer) : Unit = {
    set(1, value)
  }

  /**
   * Getter for <code>PUBLIC.T_BOOK.AUTHOR_ID</code>.
   */
  def getAuthorId : Integer = {
    val r = get(1)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  /**
   * Setter for <code>PUBLIC.T_BOOK.CO_AUTHOR_ID</code>.
   */
  def setCoAuthorId(value : Integer) : Unit = {
    set(2, value)
  }

  /**
   * Getter for <code>PUBLIC.T_BOOK.CO_AUTHOR_ID</code>.
   */
  def getCoAuthorId : Integer = {
    val r = get(2)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  /**
   * Setter for <code>PUBLIC.T_BOOK.DETAILS_ID</code>.
   */
  def setDetailsId(value : Integer) : Unit = {
    set(3, value)
  }

  /**
   * Getter for <code>PUBLIC.T_BOOK.DETAILS_ID</code>.
   */
  def getDetailsId : Integer = {
    val r = get(3)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  /**
   * Setter for <code>PUBLIC.T_BOOK.TITLE</code>.
   */
  def setTitle(value : String) : Unit = {
    set(4, value)
  }

  /**
   * Getter for <code>PUBLIC.T_BOOK.TITLE</code>.
   */
  def getTitle : String = {
    val r = get(4)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>PUBLIC.T_BOOK.PUBLISHED_IN</code>.
   */
  def setPublishedIn(value : Integer) : Unit = {
    set(5, value)
  }

  /**
   * Getter for <code>PUBLIC.T_BOOK.PUBLISHED_IN</code>.
   */
  def getPublishedIn : Integer = {
    val r = get(5)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  /**
   * Setter for <code>PUBLIC.T_BOOK.LANGUAGE_ID</code>.
   */
  def setLanguageId(value : Integer) : Unit = {
    set(6, value)
  }

  /**
   * Getter for <code>PUBLIC.T_BOOK.LANGUAGE_ID</code>.
   */
  def getLanguageId : Integer = {
    val r = get(6)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  /**
   * Setter for <code>PUBLIC.T_BOOK.CONTENT_TEXT</code>.
   */
  def setContentText(value : String) : Unit = {
    set(7, value)
  }

  /**
   * Getter for <code>PUBLIC.T_BOOK.CONTENT_TEXT</code>.
   */
  def getContentText : String = {
    val r = get(7)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>PUBLIC.T_BOOK.CONTENT_PDF</code>.
   */
  def setContentPdf(value : Array[Byte]) : Unit = {
    set(8, value)
  }

  /**
   * Getter for <code>PUBLIC.T_BOOK.CONTENT_PDF</code>.
   */
  def getContentPdf : Array[Byte] = {
    val r = get(8)
    if (r == null) null else r.asInstanceOf[Array[Byte]]
  }

  /**
   * Setter for <code>PUBLIC.T_BOOK.REC_VERSION</code>.
   */
  def setRecVersion(value : Integer) : Unit = {
    set(9, value)
  }

  /**
   * Getter for <code>PUBLIC.T_BOOK.REC_VERSION</code>.
   */
  def getRecVersion : Integer = {
    val r = get(9)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  /**
   * Setter for <code>PUBLIC.T_BOOK.REC_TIMESTAMP</code>.
   */
  def setRecTimestamp(value : Timestamp) : Unit = {
    set(10, value)
  }

  /**
   * Getter for <code>PUBLIC.T_BOOK.REC_TIMESTAMP</code>.
   */
  def getRecTimestamp : Timestamp = {
    val r = get(10)
    if (r == null) null else r.asInstanceOf[Timestamp]
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------
  override def key : Record1[Integer] = {
    return super.key.asInstanceOf[ Record1[Integer] ]
  }

  // -------------------------------------------------------------------------
  // Record11 type implementation
  // -------------------------------------------------------------------------

  override def fieldsRow : Row11[Integer, Integer, Integer, Integer, String, Integer, Integer, String, Array[Byte], Integer, Timestamp] = {
    super.fieldsRow.asInstanceOf[ Row11[Integer, Integer, Integer, Integer, String, Integer, Integer, String, Array[Byte], Integer, Timestamp] ]
  }

  override def valuesRow : Row11[Integer, Integer, Integer, Integer, String, Integer, Integer, String, Array[Byte], Integer, Timestamp] = {
    super.valuesRow.asInstanceOf[ Row11[Integer, Integer, Integer, Integer, String, Integer, Integer, String, Array[Byte], Integer, Timestamp] ]
  }
  override def field1 : Field[Integer] = TBook.T_BOOK.ID
  override def field2 : Field[Integer] = TBook.T_BOOK.AUTHOR_ID
  override def field3 : Field[Integer] = TBook.T_BOOK.CO_AUTHOR_ID
  override def field4 : Field[Integer] = TBook.T_BOOK.DETAILS_ID
  override def field5 : Field[String] = TBook.T_BOOK.TITLE
  override def field6 : Field[Integer] = TBook.T_BOOK.PUBLISHED_IN
  override def field7 : Field[Integer] = TBook.T_BOOK.LANGUAGE_ID
  override def field8 : Field[String] = TBook.T_BOOK.CONTENT_TEXT
  override def field9 : Field[Array[Byte]] = TBook.T_BOOK.CONTENT_PDF
  override def field10 : Field[Integer] = TBook.T_BOOK.REC_VERSION
  override def field11 : Field[Timestamp] = TBook.T_BOOK.REC_TIMESTAMP
  override def component1 : Integer = getId
  override def component2 : Integer = getAuthorId
  override def component3 : Integer = getCoAuthorId
  override def component4 : Integer = getDetailsId
  override def component5 : String = getTitle
  override def component6 : Integer = getPublishedIn
  override def component7 : Integer = getLanguageId
  override def component8 : String = getContentText
  override def component9 : Array[Byte] = getContentPdf
  override def component10 : Integer = getRecVersion
  override def component11 : Timestamp = getRecTimestamp
  override def value1 : Integer = getId
  override def value2 : Integer = getAuthorId
  override def value3 : Integer = getCoAuthorId
  override def value4 : Integer = getDetailsId
  override def value5 : String = getTitle
  override def value6 : Integer = getPublishedIn
  override def value7 : Integer = getLanguageId
  override def value8 : String = getContentText
  override def value9 : Array[Byte] = getContentPdf
  override def value10 : Integer = getRecVersion
  override def value11 : Timestamp = getRecTimestamp

  override def value1(value : Integer) : TBookRecord = {
    setId(value)
    this
  }

  override def value2(value : Integer) : TBookRecord = {
    setAuthorId(value)
    this
  }

  override def value3(value : Integer) : TBookRecord = {
    setCoAuthorId(value)
    this
  }

  override def value4(value : Integer) : TBookRecord = {
    setDetailsId(value)
    this
  }

  override def value5(value : String) : TBookRecord = {
    setTitle(value)
    this
  }

  override def value6(value : Integer) : TBookRecord = {
    setPublishedIn(value)
    this
  }

  override def value7(value : Integer) : TBookRecord = {
    setLanguageId(value)
    this
  }

  override def value8(value : String) : TBookRecord = {
    setContentText(value)
    this
  }

  override def value9(value : Array[Byte]) : TBookRecord = {
    setContentPdf(value)
    this
  }

  override def value10(value : Integer) : TBookRecord = {
    setRecVersion(value)
    this
  }

  override def value11(value : Timestamp) : TBookRecord = {
    setRecTimestamp(value)
    this
  }

  override def values(value1 : Integer, value2 : Integer, value3 : Integer, value4 : Integer, value5 : String, value6 : Integer, value7 : Integer, value8 : String, value9 : Array[Byte], value10 : Integer, value11 : Timestamp) : TBookRecord = {
    this.value1(value1)
    this.value2(value2)
    this.value3(value3)
    this.value4(value4)
    this.value5(value5)
    this.value6(value6)
    this.value7(value7)
    this.value8(value8)
    this.value9(value9)
    this.value10(value10)
    this.value11(value11)
    this
  }

  /**
   * Create a detached, initialised TBookRecord
   */
  def this(id : Integer, authorId : Integer, coAuthorId : Integer, detailsId : Integer, title : String, publishedIn : Integer, languageId : Integer, contentText : String, contentPdf : Array[Byte], recVersion : Integer, recTimestamp : Timestamp) = {
    this()

    set(0, id)
    set(1, authorId)
    set(2, coAuthorId)
    set(3, detailsId)
    set(4, title)
    set(5, publishedIn)
    set(6, languageId)
    set(7, contentText)
    set(8, contentPdf)
    set(9, recVersion)
    set(10, recTimestamp)
  }
}
